#!/bin/bash
WORKSPACE=$(pwd)
DEBUG=false

# Check if there is an existing Terraform state file
if [ -f "$WORKSPACE/tf/terraform.tfstate" ]; then
  # Get the list of resources in the Terraform state
  resource_list=$(terraform state list -state="tf/terraform.tfstate")

  # Check if the resource list is empty
  if [ -z "$resource_list" ]; then
    echo "Terraform state contains no resources."
    read -p "Remove the empty Terraform state? (y/n): " confirm
    if [ "$confirm" == "y" ]; then
      rm -rf "$WORKSPACE/tf/.terraform"
      rm -f "$WORKSPACE/tf/terraform.tfstate"
      rm -f "$WORKSPACE/tf/terraform.tfstate.backup"
      rm -f "$WORKSPACE/tf/terraform.tfvars"
      rm -f "$WORKSPACE/tf/.terraform.lock.hcl"
      rm -f "$WORKSPACE/tf/*.backup"
      echo "Terraform state removed."
    else
      echo "Terraform state removal canceled."
      echo "Please remove any .tfstate, .lock.hcl, and .terraform data."
      exit 1
    fi
  else
    echo "Terraform state contains the following resources:"
    echo "$resource_list"
    echo "Please remove your existing resources."
    exit 1
  fi
fi

# Get the user data for the consumer instances
cd "$WORKSPACE/src/" || (echo "Please run from the root of the repository" && exit)
zip ../consumer.zip -r consumer/ utils/ package.json

# Set the user data in the Terraform variables
export TF_VAR_aws_spot_instance_user_data_base64=$(cat ../consumer.zip | base64)

# Deploy the Terraform stack
cd "$WORKSPACE/tf/"
terraform init

# In debug mode, only run the plan
if [ "$DEBUG" = true ]; then
  terraform plan -var-file ../settings.json
else
  terraform apply -auto-approve -var-file ../settings.json
fi

# In debug mode, don't invoke the Lambda function
if [ "$DEBUG" = true ]; then
  exit 0
fi

# Remove temporary data
rm -f ../consumer.zip
rm -f ../producer.zip

# Get the Lambda function ARN from the Terraform outputs
FUNCTION_ARN=$(terraform output -raw lambda_function_arn)
echo "Received function ARN: $FUNCTION_ARN"

echo "Invoking Lambda"
aws lambda invoke \
  --function-name "$FUNCTION_ARN" \
  --invocation-type "Event" \
  --no-cli-pager /dev/null 2>&1
